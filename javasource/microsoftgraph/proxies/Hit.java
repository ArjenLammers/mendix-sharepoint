// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package microsoftgraph.proxies;

public class Hit
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject hitMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MicrosoftGraph.Hit";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		HitId("HitId"),
		Rank("Rank"),
		Summary("Summary"),
		Resource_Hit("MicrosoftGraph.Resource_Hit"),
		Hit_HitContainer("MicrosoftGraph.Hit_HitContainer");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Hit(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MicrosoftGraph.Hit"));
	}

	protected Hit(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject hitMendixObject)
	{
		if (hitMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MicrosoftGraph.Hit", hitMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MicrosoftGraph.Hit");

		this.hitMendixObject = hitMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Hit.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static microsoftgraph.proxies.Hit initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return microsoftgraph.proxies.Hit.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static microsoftgraph.proxies.Hit initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new microsoftgraph.proxies.Hit(context, mendixObject);
	}

	public static microsoftgraph.proxies.Hit load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return microsoftgraph.proxies.Hit.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of HitId
	 */
	public final java.lang.String getHitId()
	{
		return getHitId(getContext());
	}

	/**
	 * @param context
	 * @return value of HitId
	 */
	public final java.lang.String getHitId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.HitId.toString());
	}

	/**
	 * Set value of HitId
	 * @param hitid
	 */
	public final void setHitId(java.lang.String hitid)
	{
		setHitId(getContext(), hitid);
	}

	/**
	 * Set value of HitId
	 * @param context
	 * @param hitid
	 */
	public final void setHitId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String hitid)
	{
		getMendixObject().setValue(context, MemberNames.HitId.toString(), hitid);
	}

	/**
	 * @return value of Rank
	 */
	public final java.lang.Integer getRank()
	{
		return getRank(getContext());
	}

	/**
	 * @param context
	 * @return value of Rank
	 */
	public final java.lang.Integer getRank(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Rank.toString());
	}

	/**
	 * Set value of Rank
	 * @param rank
	 */
	public final void setRank(java.lang.Integer rank)
	{
		setRank(getContext(), rank);
	}

	/**
	 * Set value of Rank
	 * @param context
	 * @param rank
	 */
	public final void setRank(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer rank)
	{
		getMendixObject().setValue(context, MemberNames.Rank.toString(), rank);
	}

	/**
	 * @return value of Summary
	 */
	public final java.lang.String getSummary()
	{
		return getSummary(getContext());
	}

	/**
	 * @param context
	 * @return value of Summary
	 */
	public final java.lang.String getSummary(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Summary.toString());
	}

	/**
	 * Set value of Summary
	 * @param summary
	 */
	public final void setSummary(java.lang.String summary)
	{
		setSummary(getContext(), summary);
	}

	/**
	 * Set value of Summary
	 * @param context
	 * @param summary
	 */
	public final void setSummary(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String summary)
	{
		getMendixObject().setValue(context, MemberNames.Summary.toString(), summary);
	}

	/**
	 * @return value of Resource_Hit
	 */
	public final microsoftgraph.proxies.Resource getResource_Hit() throws com.mendix.core.CoreException
	{
		return getResource_Hit(getContext());
	}

	/**
	 * @param context
	 * @return value of Resource_Hit
	 */
	public final microsoftgraph.proxies.Resource getResource_Hit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		microsoftgraph.proxies.Resource result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Resource_Hit.toString());
		if (identifier != null)
			result = microsoftgraph.proxies.Resource.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Resource_Hit
	 * @param resource_hit
	 */
	public final void setResource_Hit(microsoftgraph.proxies.Resource resource_hit)
	{
		setResource_Hit(getContext(), resource_hit);
	}

	/**
	 * Set value of Resource_Hit
	 * @param context
	 * @param resource_hit
	 */
	public final void setResource_Hit(com.mendix.systemwideinterfaces.core.IContext context, microsoftgraph.proxies.Resource resource_hit)
	{
		if (resource_hit == null)
			getMendixObject().setValue(context, MemberNames.Resource_Hit.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Resource_Hit.toString(), resource_hit.getMendixObject().getId());
	}

	/**
	 * @return value of Hit_HitContainer
	 */
	public final microsoftgraph.proxies.HitContainer getHit_HitContainer() throws com.mendix.core.CoreException
	{
		return getHit_HitContainer(getContext());
	}

	/**
	 * @param context
	 * @return value of Hit_HitContainer
	 */
	public final microsoftgraph.proxies.HitContainer getHit_HitContainer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		microsoftgraph.proxies.HitContainer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Hit_HitContainer.toString());
		if (identifier != null)
			result = microsoftgraph.proxies.HitContainer.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Hit_HitContainer
	 * @param hit_hitcontainer
	 */
	public final void setHit_HitContainer(microsoftgraph.proxies.HitContainer hit_hitcontainer)
	{
		setHit_HitContainer(getContext(), hit_hitcontainer);
	}

	/**
	 * Set value of Hit_HitContainer
	 * @param context
	 * @param hit_hitcontainer
	 */
	public final void setHit_HitContainer(com.mendix.systemwideinterfaces.core.IContext context, microsoftgraph.proxies.HitContainer hit_hitcontainer)
	{
		if (hit_hitcontainer == null)
			getMendixObject().setValue(context, MemberNames.Hit_HitContainer.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Hit_HitContainer.toString(), hit_hitcontainer.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return hitMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final microsoftgraph.proxies.Hit that = (microsoftgraph.proxies.Hit) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MicrosoftGraph.Hit";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
