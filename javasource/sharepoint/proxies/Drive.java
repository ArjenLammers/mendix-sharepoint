// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sharepoint.proxies;

public class Drive
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject driveMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Sharepoint.Drive";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		_id("_id"),
		Name("Name"),
		DriveType("DriveType"),
		Path("Path"),
		Description("Description"),
		WebUrl("WebUrl"),
		List_Drive("Sharepoint.List_Drive"),
		SelectedDrive("Sharepoint.SelectedDrive"),
		Root("Sharepoint.Root");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Drive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Sharepoint.Drive"));
	}

	protected Drive(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject driveMendixObject)
	{
		if (driveMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Sharepoint.Drive", driveMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Sharepoint.Drive");

		this.driveMendixObject = driveMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Drive.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sharepoint.proxies.Drive initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sharepoint.proxies.Drive.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sharepoint.proxies.Drive initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sharepoint.proxies.Drive(context, mendixObject);
	}

	public static sharepoint.proxies.Drive load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sharepoint.proxies.Drive.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of _id
	 */
	public final java.lang.String get_id()
	{
		return get_id(getContext());
	}

	/**
	 * @param context
	 * @return value of _id
	 */
	public final java.lang.String get_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames._id.toString());
	}

	/**
	 * Set value of _id
	 * @param _id
	 */
	public final void set_id(java.lang.String _id)
	{
		set_id(getContext(), _id);
	}

	/**
	 * Set value of _id
	 * @param context
	 * @param _id
	 */
	public final void set_id(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String _id)
	{
		getMendixObject().setValue(context, MemberNames._id.toString(), _id);
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of DriveType
	 */
	public final java.lang.String getDriveType()
	{
		return getDriveType(getContext());
	}

	/**
	 * @param context
	 * @return value of DriveType
	 */
	public final java.lang.String getDriveType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DriveType.toString());
	}

	/**
	 * Set value of DriveType
	 * @param drivetype
	 */
	public final void setDriveType(java.lang.String drivetype)
	{
		setDriveType(getContext(), drivetype);
	}

	/**
	 * Set value of DriveType
	 * @param context
	 * @param drivetype
	 */
	public final void setDriveType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String drivetype)
	{
		getMendixObject().setValue(context, MemberNames.DriveType.toString(), drivetype);
	}

	/**
	 * @return value of Path
	 */
	public final java.lang.String getPath()
	{
		return getPath(getContext());
	}

	/**
	 * @param context
	 * @return value of Path
	 */
	public final java.lang.String getPath(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Path.toString());
	}

	/**
	 * Set value of Path
	 * @param path
	 */
	public final void setPath(java.lang.String path)
	{
		setPath(getContext(), path);
	}

	/**
	 * Set value of Path
	 * @param context
	 * @param path
	 */
	public final void setPath(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String path)
	{
		getMendixObject().setValue(context, MemberNames.Path.toString(), path);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of WebUrl
	 */
	public final java.lang.String getWebUrl()
	{
		return getWebUrl(getContext());
	}

	/**
	 * @param context
	 * @return value of WebUrl
	 */
	public final java.lang.String getWebUrl(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.WebUrl.toString());
	}

	/**
	 * Set value of WebUrl
	 * @param weburl
	 */
	public final void setWebUrl(java.lang.String weburl)
	{
		setWebUrl(getContext(), weburl);
	}

	/**
	 * Set value of WebUrl
	 * @param context
	 * @param weburl
	 */
	public final void setWebUrl(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String weburl)
	{
		getMendixObject().setValue(context, MemberNames.WebUrl.toString(), weburl);
	}

	/**
	 * @return value of List_Drive
	 */
	public final sharepoint.proxies.List getList_Drive() throws com.mendix.core.CoreException
	{
		return getList_Drive(getContext());
	}

	/**
	 * @param context
	 * @return value of List_Drive
	 */
	public final sharepoint.proxies.List getList_Drive(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sharepoint.proxies.List result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.List_Drive.toString());
		if (identifier != null)
			result = sharepoint.proxies.List.load(context, identifier);
		return result;
	}

	/**
	 * Set value of List_Drive
	 * @param list_drive
	 */
	public final void setList_Drive(sharepoint.proxies.List list_drive)
	{
		setList_Drive(getContext(), list_drive);
	}

	/**
	 * Set value of List_Drive
	 * @param context
	 * @param list_drive
	 */
	public final void setList_Drive(com.mendix.systemwideinterfaces.core.IContext context, sharepoint.proxies.List list_drive)
	{
		if (list_drive == null)
			getMendixObject().setValue(context, MemberNames.List_Drive.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.List_Drive.toString(), list_drive.getMendixObject().getId());
	}

	/**
	 * @return value of SelectedDrive
	 */
	public final sharepoint.proxies.Explorer getSelectedDrive() throws com.mendix.core.CoreException
	{
		return getSelectedDrive(getContext());
	}

	/**
	 * @param context
	 * @return value of SelectedDrive
	 */
	public final sharepoint.proxies.Explorer getSelectedDrive(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sharepoint.proxies.Explorer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SelectedDrive.toString());
		if (identifier != null)
			result = sharepoint.proxies.Explorer.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SelectedDrive
	 * @param selecteddrive
	 */
	public final void setSelectedDrive(sharepoint.proxies.Explorer selecteddrive)
	{
		setSelectedDrive(getContext(), selecteddrive);
	}

	/**
	 * Set value of SelectedDrive
	 * @param context
	 * @param selecteddrive
	 */
	public final void setSelectedDrive(com.mendix.systemwideinterfaces.core.IContext context, sharepoint.proxies.Explorer selecteddrive)
	{
		if (selecteddrive == null)
			getMendixObject().setValue(context, MemberNames.SelectedDrive.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SelectedDrive.toString(), selecteddrive.getMendixObject().getId());
	}

	/**
	 * @return value of Root
	 */
	public final sharepoint.proxies.DriveItem getRoot() throws com.mendix.core.CoreException
	{
		return getRoot(getContext());
	}

	/**
	 * @param context
	 * @return value of Root
	 */
	public final sharepoint.proxies.DriveItem getRoot(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sharepoint.proxies.DriveItem result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Root.toString());
		if (identifier != null)
			result = sharepoint.proxies.DriveItem.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Root
	 * @param root
	 */
	public final void setRoot(sharepoint.proxies.DriveItem root)
	{
		setRoot(getContext(), root);
	}

	/**
	 * Set value of Root
	 * @param context
	 * @param root
	 */
	public final void setRoot(com.mendix.systemwideinterfaces.core.IContext context, sharepoint.proxies.DriveItem root)
	{
		if (root == null)
			getMendixObject().setValue(context, MemberNames.Root.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Root.toString(), root.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return driveMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sharepoint.proxies.Drive that = (sharepoint.proxies.Drive) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Sharepoint.Drive";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
