// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sharepoint.proxies;

public class List
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject listMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Sharepoint.List";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		_id("_id"),
		Name("Name"),
		CreatedDateTime("CreatedDateTime"),
		LastModifiedDateTime("LastModifiedDateTime"),
		List_Explorer("Sharepoint.List_Explorer"),
		SelectedList("Sharepoint.SelectedList"),
		List_Drive("Sharepoint.List_Drive");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public List(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected List(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject listMendixObject)
	{
		if (listMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, listMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.listMendixObject = listMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'List.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sharepoint.proxies.List initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sharepoint.proxies.List.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static sharepoint.proxies.List initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sharepoint.proxies.List(context, mendixObject);
	}

	public static sharepoint.proxies.List load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sharepoint.proxies.List.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of _id
	 */
	public final java.lang.String get_id()
	{
		return get_id(getContext());
	}

	/**
	 * @param context
	 * @return value of _id
	 */
	public final java.lang.String get_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames._id.toString());
	}

	/**
	 * Set value of _id
	 * @param _id
	 */
	public final void set_id(java.lang.String _id)
	{
		set_id(getContext(), _id);
	}

	/**
	 * Set value of _id
	 * @param context
	 * @param _id
	 */
	public final void set_id(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String _id)
	{
		getMendixObject().setValue(context, MemberNames._id.toString(), _id);
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of CreatedDateTime
	 */
	public final java.util.Date getCreatedDateTime()
	{
		return getCreatedDateTime(getContext());
	}

	/**
	 * @param context
	 * @return value of CreatedDateTime
	 */
	public final java.util.Date getCreatedDateTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.CreatedDateTime.toString());
	}

	/**
	 * Set value of CreatedDateTime
	 * @param createddatetime
	 */
	public final void setCreatedDateTime(java.util.Date createddatetime)
	{
		setCreatedDateTime(getContext(), createddatetime);
	}

	/**
	 * Set value of CreatedDateTime
	 * @param context
	 * @param createddatetime
	 */
	public final void setCreatedDateTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date createddatetime)
	{
		getMendixObject().setValue(context, MemberNames.CreatedDateTime.toString(), createddatetime);
	}

	/**
	 * @return value of LastModifiedDateTime
	 */
	public final java.util.Date getLastModifiedDateTime()
	{
		return getLastModifiedDateTime(getContext());
	}

	/**
	 * @param context
	 * @return value of LastModifiedDateTime
	 */
	public final java.util.Date getLastModifiedDateTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastModifiedDateTime.toString());
	}

	/**
	 * Set value of LastModifiedDateTime
	 * @param lastmodifieddatetime
	 */
	public final void setLastModifiedDateTime(java.util.Date lastmodifieddatetime)
	{
		setLastModifiedDateTime(getContext(), lastmodifieddatetime);
	}

	/**
	 * Set value of LastModifiedDateTime
	 * @param context
	 * @param lastmodifieddatetime
	 */
	public final void setLastModifiedDateTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date lastmodifieddatetime)
	{
		getMendixObject().setValue(context, MemberNames.LastModifiedDateTime.toString(), lastmodifieddatetime);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of List_Explorer
	 */
	public final sharepoint.proxies.Explorer getList_Explorer() throws com.mendix.core.CoreException
	{
		return getList_Explorer(getContext());
	}

	/**
	 * @param context
	 * @return value of List_Explorer
	 * @throws com.mendix.core.CoreException
	 */
	public final sharepoint.proxies.Explorer getList_Explorer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sharepoint.proxies.Explorer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.List_Explorer.toString());
		if (identifier != null) {
			result = sharepoint.proxies.Explorer.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of List_Explorer
	 * @param list_explorer
	 */
	public final void setList_Explorer(sharepoint.proxies.Explorer list_explorer)
	{
		setList_Explorer(getContext(), list_explorer);
	}

	/**
	 * Set value of List_Explorer
	 * @param context
	 * @param list_explorer
	 */
	public final void setList_Explorer(com.mendix.systemwideinterfaces.core.IContext context, sharepoint.proxies.Explorer list_explorer)
	{
		if (list_explorer == null) {
			getMendixObject().setValue(context, MemberNames.List_Explorer.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.List_Explorer.toString(), list_explorer.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of SelectedList
	 */
	public final sharepoint.proxies.Explorer getSelectedList() throws com.mendix.core.CoreException
	{
		return getSelectedList(getContext());
	}

	/**
	 * @param context
	 * @return value of SelectedList
	 * @throws com.mendix.core.CoreException
	 */
	public final sharepoint.proxies.Explorer getSelectedList(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sharepoint.proxies.Explorer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SelectedList.toString());
		if (identifier != null) {
			result = sharepoint.proxies.Explorer.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of SelectedList
	 * @param selectedlist
	 */
	public final void setSelectedList(sharepoint.proxies.Explorer selectedlist)
	{
		setSelectedList(getContext(), selectedlist);
	}

	/**
	 * Set value of SelectedList
	 * @param context
	 * @param selectedlist
	 */
	public final void setSelectedList(com.mendix.systemwideinterfaces.core.IContext context, sharepoint.proxies.Explorer selectedlist)
	{
		if (selectedlist == null) {
			getMendixObject().setValue(context, MemberNames.SelectedList.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.SelectedList.toString(), selectedlist.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of List_Drive
	 */
	public final sharepoint.proxies.Drive getList_Drive() throws com.mendix.core.CoreException
	{
		return getList_Drive(getContext());
	}

	/**
	 * @param context
	 * @return value of List_Drive
	 * @throws com.mendix.core.CoreException
	 */
	public final sharepoint.proxies.Drive getList_Drive(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sharepoint.proxies.Drive result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.List_Drive.toString());
		if (identifier != null) {
			result = sharepoint.proxies.Drive.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of List_Drive
	 * @param list_drive
	 */
	public final void setList_Drive(sharepoint.proxies.Drive list_drive)
	{
		setList_Drive(getContext(), list_drive);
	}

	/**
	 * Set value of List_Drive
	 * @param context
	 * @param list_drive
	 */
	public final void setList_Drive(com.mendix.systemwideinterfaces.core.IContext context, sharepoint.proxies.Drive list_drive)
	{
		if (list_drive == null) {
			getMendixObject().setValue(context, MemberNames.List_Drive.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.List_Drive.toString(), list_drive.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return listMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sharepoint.proxies.List that = (sharepoint.proxies.List) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
