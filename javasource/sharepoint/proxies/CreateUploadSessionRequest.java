// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sharepoint.proxies;

public class CreateUploadSessionRequest
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject createUploadSessionRequestMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Sharepoint.CreateUploadSessionRequest";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ConflictBehavior("ConflictBehavior"),
		Description("Description"),
		FileSize("FileSize"),
		Name("Name");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CreateUploadSessionRequest(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected CreateUploadSessionRequest(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject createUploadSessionRequestMendixObject)
	{
		if (createUploadSessionRequestMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, createUploadSessionRequestMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.createUploadSessionRequestMendixObject = createUploadSessionRequestMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'CreateUploadSessionRequest.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sharepoint.proxies.CreateUploadSessionRequest initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sharepoint.proxies.CreateUploadSessionRequest.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static sharepoint.proxies.CreateUploadSessionRequest initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sharepoint.proxies.CreateUploadSessionRequest(context, mendixObject);
	}

	public static sharepoint.proxies.CreateUploadSessionRequest load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sharepoint.proxies.CreateUploadSessionRequest.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ConflictBehavior
	 */
	public final java.lang.String getConflictBehavior()
	{
		return getConflictBehavior(getContext());
	}

	/**
	 * @param context
	 * @return value of ConflictBehavior
	 */
	public final java.lang.String getConflictBehavior(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ConflictBehavior.toString());
	}

	/**
	 * Set value of ConflictBehavior
	 * @param conflictbehavior
	 */
	public final void setConflictBehavior(java.lang.String conflictbehavior)
	{
		setConflictBehavior(getContext(), conflictbehavior);
	}

	/**
	 * Set value of ConflictBehavior
	 * @param context
	 * @param conflictbehavior
	 */
	public final void setConflictBehavior(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String conflictbehavior)
	{
		getMendixObject().setValue(context, MemberNames.ConflictBehavior.toString(), conflictbehavior);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of FileSize
	 */
	public final java.lang.Integer getFileSize()
	{
		return getFileSize(getContext());
	}

	/**
	 * @param context
	 * @return value of FileSize
	 */
	public final java.lang.Integer getFileSize(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.FileSize.toString());
	}

	/**
	 * Set value of FileSize
	 * @param filesize
	 */
	public final void setFileSize(java.lang.Integer filesize)
	{
		setFileSize(getContext(), filesize);
	}

	/**
	 * Set value of FileSize
	 * @param context
	 * @param filesize
	 */
	public final void setFileSize(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer filesize)
	{
		getMendixObject().setValue(context, MemberNames.FileSize.toString(), filesize);
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return createUploadSessionRequestMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sharepoint.proxies.CreateUploadSessionRequest that = (sharepoint.proxies.CreateUploadSessionRequest) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
