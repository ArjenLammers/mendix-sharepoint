// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package sharepoint.actions;

import java.util.LinkedList;
import java.util.List;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import sharepoint.proxies.Column;
import sharepoint.proxies.ColumnType;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.thirdparty.org.json.JSONObject;
import com.mendix.thirdparty.org.json.JSONTokener;

public class ExtractFieldValues extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String json;
	private java.lang.Boolean driveItemRequest;

	public ExtractFieldValues(IContext context, java.lang.String json, java.lang.Boolean driveItemRequest)
	{
		super(context);
		this.json = json;
		this.driveItemRequest = driveItemRequest;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		final List<IMendixObject> result = new LinkedList<>();
		JSONObject object = new JSONObject(json);
		if (driveItemRequest) {
			object = object.getJSONObject("listItem");
		}		
		if (!object.has("fields")) return result;
		JSONObject fields = object.getJSONObject("fields");
		fields.keys().forEachRemaining(key -> {
			Column column = new Column(getContext());
			column.setName(key);
			result.add(column.getMendixObject());
		
			Object value = fields.get(key);
			if (value == null) {
				return;
			}
			if (value instanceof Number) {
				column.setColumnType(ColumnType.NUMBER);
				column.setNumericValue(fields.getLong(key));
				column.setDisplayValue(value.toString());
				
			} else if (value instanceof String) {
				column.setColumnType(ColumnType.STRING);
				column.setStringValue((String) value);
				column.setDisplayValue((String) value);
			}
		});
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ExtractFieldValues";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
